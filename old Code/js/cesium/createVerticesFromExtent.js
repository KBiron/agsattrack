/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2013 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define("Core/defaultValue",[],function(){var e=function(e,t){return typeof e!="undefined"?e:t};return e}),define("Core/DeveloperError",[],function(){var e=function(e){this.name="DeveloperError",this.message=e,this.error=new Error};return e.prototype.toString=function(){var e=this.name+": "+this.message;return typeof this.error!="undefined"&&(typeof this.error.stack!="undefined"?e+="\n"+this.error.stack.toString():e+="\n"+this.error.toString()),e},e}),define("Core/Math",["./defaultValue","./DeveloperError"],function(e,t){var n={};n.EPSILON1=.1,n.EPSILON2=.01,n.EPSILON3=.001,n.EPSILON4=1e-4,n.EPSILON5=1e-5,n.EPSILON6=1e-6,n.EPSILON7=1e-7,n.EPSILON8=1e-8,n.EPSILON9=1e-9,n.EPSILON10=1e-10,n.EPSILON11=1e-11,n.EPSILON12=1e-12,n.EPSILON13=1e-13,n.EPSILON14=1e-14,n.EPSILON15=1e-15,n.EPSILON16=1e-16,n.EPSILON17=1e-17,n.EPSILON18=1e-18,n.EPSILON19=1e-19,n.EPSILON20=1e-20,n.GRAVITATIONALPARAMETER=3986004418e5,n.sign=function(e){return e>0?1:e<0?-1:0},n.sinh=function(e){var t=Math.pow(Math.E,e),n=Math.pow(Math.E,-1*e);return(t-n)*.5},n.cosh=function(e){var t=Math.pow(Math.E,e),n=Math.pow(Math.E,-1*e);return(t+n)*.5},n.lerp=function(e,t,n){return(1-n)*e+n*t},n.PI=Math.PI,n.ONE_OVER_PI=1/Math.PI,n.PI_OVER_TWO=Math.PI*.5,n.PI_OVER_THREE=Math.PI/3,n.PI_OVER_FOUR=Math.PI/4,n.PI_OVER_SIX=Math.PI/6,n.THREE_PI_OVER_TWO=3*Math.PI*.5,n.TWO_PI=2*Math.PI,n.ONE_OVER_TWO_PI=1/(2*Math.PI),n.RADIANS_PER_DEGREE=Math.PI/180,n.DEGREES_PER_RADIAN=180/Math.PI,n.toRadians=function(e){return e*n.RADIANS_PER_DEGREE},n.toDegrees=function(e){return e*n.DEGREES_PER_RADIAN},n.convertLongitudeRange=function(e){var t=n.TWO_PI,r=e-Math.floor(e/t)*t;return r<-Math.PI?r+t:r>=Math.PI?r-t:r},n.negativePiToPi=function(e){var t=n.EPSILON10,r=n.PI,i=n.TWO_PI;while(e<-(r+t))e+=i;if(e<-r)return-r;while(e>r+t)e-=i;return e>r?r:e},n.equalsEpsilon=function(e,t,n){return n=n||0,Math.abs(e-t)<=n};var r=[1];return n.factorial=function(e){if(typeof e!="number"||e<0)throw new t("A number greater than or equal to 0 is required.");var n=r.length;if(e>=n){var i=r[n-1];for(var s=n;s<=e;s++)r.push(i*s)}return r[e]},n.incrementWrap=function(n,r,i){i=e(i,0);if(r<=i)throw new t("Maximum value must be greater than minimum value.");return++n,n>r&&(n=i),n},n.isPowerOfTwo=function(e){if(typeof e!="number"||e<0)throw new t("A number greater than or equal to 0 is required.");var n=e|0;return n!==0&&(n&n-1)===0},n.clamp=function(e,t,n){return e<t?t:e>n?n:e},n}),define("Core/freezeObject",[],function(){var e=Object.freeze;return typeof e=="undefined"&&(e=function(e){return e}),e}),define("Core/Cartesian3",["./defaultValue","./DeveloperError","./freezeObject"],function(e,t,n){var r=function(t,n,r){this.x=e(t,0),this.y=e(n,0),this.z=e(r,0)};r.fromSpherical=function(n,i){if(typeof n=="undefined")throw new t("spherical is required");typeof i=="undefined"&&(i=new r);var s=n.clock,o=n.cone,u=e(n.magnitude,1),a=u*Math.sin(o);return i.x=a*Math.cos(s),i.y=a*Math.sin(s),i.z=u*Math.cos(o),i},r.clone=function(e,n){if(typeof e=="undefined")throw new t("cartesian is required");return typeof n=="undefined"?new r(e.x,e.y,e.z):(n.x=e.x,n.y=e.y,n.z=e.z,n)},r.fromCartesian4=r.clone,r.getMaximumComponent=function(e){if(typeof e=="undefined")throw new t("cartesian is required");return Math.max(e.x,e.y,e.z)},r.getMinimumComponent=function(e){if(typeof e=="undefined")throw new t("cartesian is required");return Math.min(e.x,e.y,e.z)},r.magnitudeSquared=function(e){if(typeof e=="undefined")throw new t("cartesian is required");return e.x*e.x+e.y*e.y+e.z*e.z},r.magnitude=function(e){return Math.sqrt(r.magnitudeSquared(e))},r.normalize=function(e,n){if(typeof e=="undefined")throw new t("cartesian is required");var i=r.magnitude(e);return typeof n=="undefined"?new r(e.x/i,e.y/i,e.z/i):(n.x=e.x/i,n.y=e.y/i,n.z=e.z/i,n)},r.dot=function(e,n){if(typeof e=="undefined")throw new t("left is required");if(typeof n=="undefined")throw new t("right is required");return e.x*n.x+e.y*n.y+e.z*n.z},r.multiplyComponents=function(e,n,i){if(typeof e=="undefined")throw new t("left is required");if(typeof n=="undefined")throw new t("right is required");return typeof i=="undefined"?new r(e.x*n.x,e.y*n.y,e.z*n.z):(i.x=e.x*n.x,i.y=e.y*n.y,i.z=e.z*n.z,i)},r.add=function(e,n,i){if(typeof e=="undefined")throw new t("left is required");if(typeof n=="undefined")throw new t("right is required");return typeof i=="undefined"?new r(e.x+n.x,e.y+n.y,e.z+n.z):(i.x=e.x+n.x,i.y=e.y+n.y,i.z=e.z+n.z,i)},r.subtract=function(e,n,i){if(typeof e=="undefined")throw new t("left is required");if(typeof n=="undefined")throw new t("right is required");return typeof i=="undefined"?new r(e.x-n.x,e.y-n.y,e.z-n.z):(i.x=e.x-n.x,i.y=e.y-n.y,i.z=e.z-n.z,i)},r.multiplyByScalar=function(e,n,i){if(typeof e=="undefined")throw new t("cartesian is required");if(typeof n!="number")throw new t("scalar is required and must be a number.");return typeof i=="undefined"?new r(e.x*n,e.y*n,e.z*n):(i.x=e.x*n,i.y=e.y*n,i.z=e.z*n,i)},r.divideByScalar=function(e,n,i){if(typeof e=="undefined")throw new t("cartesian is required");if(typeof n!="number")throw new t("scalar is required and must be a number.");return typeof i=="undefined"?new r(e.x/n,e.y/n,e.z/n):(i.x=e.x/n,i.y=e.y/n,i.z=e.z/n,i)},r.negate=function(e,n){if(typeof e=="undefined")throw new t("cartesian is required");return typeof n=="undefined"?new r(-e.x,-e.y,-e.z):(n.x=-e.x,n.y=-e.y,n.z=-e.z,n)},r.abs=function(e,n){if(typeof e=="undefined")throw new t("cartesian is required");return typeof n=="undefined"?new r(Math.abs(e.x),Math.abs(e.y),Math.abs(e.z)):(n.x=Math.abs(e.x),n.y=Math.abs(e.y),n.z=Math.abs(e.z),n)};var i=new r;r.lerp=function(e,n,s,o){if(typeof e=="undefined")throw new t("start is required.");if(typeof n=="undefined")throw new t("end is required.");if(typeof s!="number")throw new t("t is required and must be a number.");return r.multiplyByScalar(n,s,i),o=r.multiplyByScalar(e,1-s,o),r.add(i,o,o)};var s=new r,o=new r;r.angleBetween=function(e,n){if(typeof e=="undefined")throw new t("left is required");if(typeof n=="undefined")throw new t("right is required");r.normalize(e,s),r.normalize(n,o);var i=r.dot(s,o),u=r.cross(s,o,s).magnitude();return Math.atan2(u,i)};var u=new r;return r.mostOrthogonalAxis=function(e,n){if(typeof e=="undefined")throw new t("cartesian is required.");var i=r.normalize(e,u);return r.abs(i,i),i.x<=i.y?i.x<=i.z?n=r.clone(r.UNIT_X,n):n=r.clone(r.UNIT_Z,n):i.y<=i.z?n=r.clone(r.UNIT_Y,n):n=r.clone(r.UNIT_Z,n),n},r.equals=function(e,t){return e===t||typeof e!="undefined"&&typeof t!="undefined"&&e.x===t.x&&e.y===t.y&&e.z===t.z},r.equalsEpsilon=function(e,n,r){if(typeof r!="number")throw new t("epsilon is required and must be a number.");return e===n||typeof e!="undefined"&&typeof n!="undefined"&&Math.abs(e.x-n.x)<=r&&Math.abs(e.y-n.y)<=r&&Math.abs(e.z-n.z)<=r},r.cross=function(e,n,i){if(typeof e=="undefined")throw new t("left is required");if(typeof n=="undefined")throw new t("right is required");var s=e.x,o=e.y,u=e.z,a=n.x,f=n.y,l=n.z,c=o*l-u*f,h=u*a-s*l,p=s*f-o*a;return typeof i=="undefined"?new r(c,h,p):(i.x=c,i.y=h,i.z=p,i)},r.ZERO=n(new r(0,0,0)),r.UNIT_X=n(new r(1,0,0)),r.UNIT_Y=n(new r(0,1,0)),r.UNIT_Z=n(new r(0,0,1)),r.prototype.getMaximumComponent=function(){return r.getMaximumComponent(this)},r.prototype.getMinimumComponent=function(){return r.getMinimumComponent(this)},r.prototype.clone=function(e){return r.clone(this,e)},r.prototype.magnitudeSquared=function(){return r.magnitudeSquared(this)},r.prototype.magnitude=function(){return r.magnitude(this)},r.prototype.normalize=function(e){return r.normalize(this,e)},r.prototype.dot=function(e){return r.dot(this,e)},r.prototype.multiplyComponents=function(e,t){return r.multiplyComponents(this,e,t)},r.prototype.add=function(e,t){return r.add(this,e,t)},r.prototype.subtract=function(e,t){return r.subtract(this,e,t)},r.prototype.multiplyByScalar=function(e,t){return r.multiplyByScalar(this,e,t)},r.prototype.divideByScalar=function(e,t){return r.divideByScalar(this,e,t)},r.prototype.negate=function(e){return r.negate(this,e)},r.prototype.abs=function(e){return r.abs(this,e)},r.prototype.lerp=function(e,t,n){return r.lerp(this,e,t,n)},r.prototype.angleBetween=function(e){return r.angleBetween(this,e)},r.prototype.mostOrthogonalAxis=function(e){return r.mostOrthogonalAxis(this,e)},r.prototype.equals=function(e){return r.equals(this,e)},r.prototype.equalsEpsilon=function(e,t){return r.equalsEpsilon(this,e,t)},r.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+")"},r.prototype.cross=function(e,t){return r.cross(this,e,t)},r}),define("Core/Cartographic",["./defaultValue","./DeveloperError","./freezeObject","./Math"],function(e,t,n,r){var i=function(t,n,r){this.longitude=e(t,0),this.latitude=e(n,0),this.height=e(r,0)};return i.fromDegrees=function(t,n,s,o){return t=r.toRadians(e(t,0)),n=r.toRadians(e(n,0)),s=e(s,0),typeof o=="undefined"?new i(t,n,s):(o.longitude=t,o.latitude=n,o.height=s,o)},i.clone=function(e,n){if(typeof e=="undefined")throw new t("cartographic is required");return typeof n=="undefined"?new i(e.longitude,e.latitude,e.height):(n.longitude=e.longitude,n.latitude=e.latitude,n.height=e.height,n)},i.equals=function(e,t){return e===t||typeof e!="undefined"&&typeof t!="undefined"&&e.longitude===t.longitude&&e.latitude===t.latitude&&e.height===t.height},i.equalsEpsilon=function(e,n,r){if(typeof r!="number")throw new t("epsilon is required and must be a number.");return e===n||typeof e!="undefined"&&typeof n!="undefined"&&Math.abs(e.longitude-n.longitude)<=r&&Math.abs(e.latitude-n.latitude)<=r&&Math.abs(e.height-n.height)<=r},i.toString=function(e){if(typeof e=="undefined")throw new t("cartographic is required");return"("+e.longitude+", "+e.latitude+", "+e.height+")"},i.ZERO=n(new i(0,0,0)),i.prototype.clone=function(e){return i.clone(this,e)},i.prototype.equals=function(e){return i.equals(this,e)},i.prototype.equalsEpsilon=function(e,t){return i.equalsEpsilon(this,e,t)},i.prototype.toString=function(){return i.toString(this)},i}),define("Core/Ellipsoid",["./freezeObject","./defaultValue","./DeveloperError","./Math","./Cartesian3","./Cartographic"],function(e,t,n,r,i,s){var o=function(e,s,o){e=t(e,0),s=t(s,0),o=t(o,0);if(e<0||s<0||o<0)throw new n("All radii components must be greater than or equal to zero.");this._radii=new i(e,s,o),this._radiiSquared=new i(e*e,s*s,o*o),this._radiiToTheFourth=new i(e*e*e*e,s*s*s*s,o*o*o*o),this._oneOverRadii=new i(e===0?0:1/e,s===0?0:1/s,o===0?0:1/o),this._oneOverRadiiSquared=new i(e===0?0:1/(e*e),s===0?0:1/(s*s),o===0?0:1/(o*o)),this._minimumRadius=Math.min(e,s,o),this._maximumRadius=Math.max(e,s,o),this._centerToleranceSquared=r.EPSILON1};o.fromCartesian3=function(e){return typeof e=="undefined"?new o:new o(e.x,e.y,e.z)},o.WGS84=e(new o(6378137,6378137,6356752.314245179)),o.UNIT_SPHERE=e(new o(1,1,1)),o.prototype.getRadii=function(){return this._radii},o.prototype.getRadiiSquared=function(){return this._radiiSquared},o.prototype.getRadiiToTheFourth=function(){return this._radiiToTheFourth},o.prototype.getOneOverRadii=function(){return this._oneOverRadii},o.prototype.getOneOverRadiiSquared=function(){return this._oneOverRadiiSquared},o.prototype.getMinimumRadius=function(){return this._minimumRadius},o.prototype.getMaximumRadius=function(){return this._maximumRadius},o.prototype.geocentricSurfaceNormal=i.normalize,o.prototype.geodeticSurfaceNormalCartographic=function(e,t){if(typeof e=="undefined")throw new n("cartographic is required.");var r=e.longitude,s=e.latitude,o=Math.cos(s),u=o*Math.cos(r),a=o*Math.sin(r),f=Math.sin(s);return typeof t=="undefined"&&(t=new i),t.x=u,t.y=a,t.z=f,i.normalize(t,t)},o.prototype.geodeticSurfaceNormal=function(e,t){return t=i.multiplyComponents(e,this._oneOverRadiiSquared,t),i.normalize(t,t)};var u=new i,a=new i;o.prototype.cartographicToCartesian=function(e,t){var n=u,r=a;this.geodeticSurfaceNormalCartographic(e,n),i.multiplyComponents(this._radiiSquared,n,r);var s=Math.sqrt(i.dot(n,r));return i.divideByScalar(r,s,r),i.multiplyByScalar(n,e.height,n),i.add(r,n,t)},o.prototype.cartographicArrayToCartesianArray=function(e,t){if(typeof e=="undefined")throw new n("cartographics is required.");var r=e.length;typeof t=="undefined"?t=new Array(r):t.length=r;for(var i=0;i<r;i++)t[i]=this.cartographicToCartesian(e[i],t[i]);return t};var f=new i,l=new i,c=new i;o.prototype.cartesianToCartographic=function(e,t){var n=this.scaleToGeodeticSurface(e,l);if(typeof n=="undefined")return undefined;var o=this.geodeticSurfaceNormal(n,f),u=i.subtract(e,n,c),a=Math.atan2(o.y,o.x),h=Math.asin(o.z),p=r.sign(i.dot(u,e))*i.magnitude(u);return typeof t=="undefined"?new s(a,h,p):(t.longitude=a,t.latitude=h,t.height=p,t)},o.prototype.cartesianArrayToCartographicArray=function(e,t){if(typeof e=="undefined")throw new n("cartesians is required.");var r=e.length;typeof t=="undefined"?t=new Array(r):t.length=r;for(var i=0;i<r;++i)t[i]=this.cartesianToCartographic(e[i],t[i]);return t};var h,p=new i;return o.prototype.scaleToGeodeticSurface=function(e,t){if(typeof e=="undefined")throw new n("cartesian is required.");var s=e.x,o=e.y,u=e.z,a=this._oneOverRadii,f=a.x,l=a.y,c=a.z,d=s*s*f*f,v=o*o*l*l,m=u*u*c*c,g=d+v+m,y=Math.sqrt(1/g),b=i.multiplyByScalar(e,y,h);if(g<this._centerToleranceSquared)return isFinite(y)?i.clone(b,t):undefined;var w=this._oneOverRadiiSquared,E=w.x,S=w.y,x=w.z,T=p;T.x=b.x*E*2,T.y=b.y*S*2,T.z=b.z*x*2;var N=(1-y)*i.magnitude(e)/(.5*i.magnitude(T)),C=0,k,L,A,O,M,_,D,P,H,B,j;do{N-=C,A=1/(1+N*E),O=1/(1+N*S),M=1/(1+N*x),_=A*A,D=O*O,P=M*M,H=_*A,B=D*O,j=P*M,k=d*_+v*D+m*P-1,L=d*H*E+v*B*S+m*j*x;var F=-2*L;C=k/F}while(Math.abs(k)>r.EPSILON12);return typeof t=="undefined"?new i(s*A,o*O,u*M):(t.x=s*A,t.y=o*O,t.z=u*M,t)},o.prototype.scaleToGeocentricSurface=function(e,t){if(typeof e=="undefined")throw new n("cartesian is required.");var r=e.x,s=e.y,o=e.z,u=this._oneOverRadiiSquared,a=1/Math.sqrt(r*r*u.x+s*s*u.y+o*o*u.z);return i.multiplyByScalar(e,a,t)},o.prototype.transformPositionToScaledSpace=function(e,t){return i.multiplyComponents(e,this._oneOverRadii,t)},o.prototype.equals=function(e){return this===e||typeof e!="undefined"&&i.equals(this._radii,e._radii)},o.prototype.toString=function(){return this._radii.toString()},o}),define("Core/Extent",["./freezeObject","./defaultValue","./Ellipsoid","./Cartographic","./DeveloperError","./Math"],function(e,t,n,r,i,s){var o=function(e,n,r,i){this.west=t(e,0),this.south=t(n,0),this.east=t(r,0),this.north=t(i,0)};o.prototype.clone=function(e){return typeof e=="undefined"?new o(this.west,this.south,this.east,this.north):(e.west=this.west,e.south=this.south,e.east=this.east,e.north=this.north,e)},o.prototype.equals=function(e){return typeof e!="undefined"&&this.west===e.west&&this.south===e.south&&this.east===e.east&&this.north===e.north},o.prototype.equalsEpsilon=function(e,t){if(typeof t!="number")throw new i("epsilon is required and must be a number.");return typeof e!="undefined"&&Math.abs(this.west-e.west)<=t&&Math.abs(this.south-e.south)<=t&&Math.abs(this.east-e.east)<=t&&Math.abs(this.north-e.north)<=t},o.prototype.validate=function(){var e=this.north;if(typeof e!="number")throw new i("north is required to be a number.");if(e<-s.PI_OVER_TWO||e>s.PI_OVER_TWO)throw new i("north must be in the interval [-Pi/2, Pi/2].");var t=this.south;if(typeof t!="number")throw new i("south is required to be a number.");if(t<-s.PI_OVER_TWO||t>s.PI_OVER_TWO)throw new i("south must be in the interval [-Pi/2, Pi/2].");var n=this.west;if(typeof n!="number")throw new i("west is required to be a number.");if(n<-Math.PI||n>Math.PI)throw new i("west must be in the interval [-Pi, Pi].");var r=this.east;if(typeof r!="number")throw new i("east is required to be a number.");if(r<-Math.PI||r>Math.PI)throw new i("east must be in the interval [-Pi, Pi].")},o.prototype.getSouthwest=function(e){return typeof e=="undefined"?new r(this.west,this.south):(e.longitude=this.west,e.latitude=this.south,e.height=0,e)},o.prototype.getNorthwest=function(e){return typeof e=="undefined"?new r(this.west,this.north):(e.longitude=this.west,e.latitude=this.north,e.height=0,e)},o.prototype.getNortheast=function(e){return typeof e=="undefined"?new r(this.east,this.north):(e.longitude=this.east,e.latitude=this.north,e.height=0,e)},o.prototype.getSoutheast=function(e){return typeof e=="undefined"?new r(this.east,this.south):(e.longitude=this.east,e.latitude=this.south,e.height=0,e)},o.prototype.getCenter=function(e){return typeof e=="undefined"?new r((this.west+this.east)*.5,(this.south+this.north)*.5):(e.longitude=(this.west+this.east)*.5,e.latitude=(this.south+this.north)*.5,e.height=0,e)},o.prototype.intersectWith=function(e,t){if(typeof e=="undefined")throw new i("otherExtent is required.");var n=Math.max(this.west,e.west),r=Math.max(this.south,e.south),s=Math.min(this.east,e.east),u=Math.min(this.north,e.north);return typeof t=="undefined"?new o(n,r,s,u):(t.west=n,t.south=r,t.east=s,t.north=u,t)},o.prototype.contains=function(e){if(typeof e=="undefined")throw new i("cartographic is required.");return e.longitude>=this.west&&e.longitude<=this.east&&e.latitude>=this.south&&e.latitude<=this.north},o.prototype.isEmpty=function(){return this.west===this.east&&this.south===this.north};var u=new r;return o.prototype.subsample=function(e,r){e=t(e,n.WGS84),typeof r=="undefined"&&(r=[]);var i=0,o=this.north,a=this.south,f=this.east,l=this.west,c=u;c.longitude=l,c.latitude=o,r[i]=e.cartographicToCartesian(c,r[i]),i++,c.longitude=f,r[i]=e.cartographicToCartesian(c,r[i]),i++,c.latitude=a,r[i]=e.cartographicToCartesian(c,r[i]),i++,c.longitude=l,r[i]=e.cartographicToCartesian(c,r[i]),i++,o<0?c.latitude=o:a>0?c.latitude=a:c.latitude=0;for(var h=1;h<8;++h){var p=-Math.PI+h*s.PI_OVER_TWO;l<p&&p<f&&(c.longitude=p,r[i]=e.cartographicToCartesian(c,r[i]),i++)}return c.latitude===0&&(c.longitude=l,r[i]=e.cartographicToCartesian(c,r[i]),i++,c.longitude=f,r[i]=e.cartographicToCartesian(c,r[i]),i++),r.length=i,r},o.MAX_VALUE=e(new o(-Math.PI,-s.PI_OVER_TWO,Math.PI,s.PI_OVER_TWO)),o}),define("Core/Enumeration",[],function(){var e=function(e,t,n){this.value=e,this.name=t;if(typeof n!="undefined")for(var r in n)n.hasOwnProperty(r)&&(this[r]=n[r])};return e.prototype.valueOf=function(){return this.value},e.prototype.toString=function(){return this.name},e}),define("Core/ComponentDatatype",["./Enumeration"],function(e){if(typeof Int8Array=="undefined")return{};var t={};return t.BYTE=new e(5120,"BYTE"),t.BYTE.sizeInBytes=Int8Array.BYTES_PER_ELEMENT,t.BYTE.toTypedArray=function(e){return new Int8Array(e)},t.BYTE.createArrayBufferView=function(e,t){return new Int8Array(e,t)},t.UNSIGNED_BYTE=new e(5121,"UNSIGNED_BYTE"),t.UNSIGNED_BYTE.sizeInBytes=Uint8Array.BYTES_PER_ELEMENT,t.UNSIGNED_BYTE.toTypedArray=function(e){return new Uint8Array(e)},t.UNSIGNED_BYTE.createArrayBufferView=function(e,t){return new Uint8Array(e,t)},t.SHORT=new e(5122,"SHORT"),t.SHORT.sizeInBytes=Int16Array.BYTES_PER_ELEMENT,t.SHORT.toTypedArray=function(e){return new Int16Array(e)},t.SHORT.createArrayBufferView=function(e,t){return new Int16Array(e,t)},t.UNSIGNED_SHORT=new e(5123,"UNSIGNED_SHORT"),t.UNSIGNED_SHORT.sizeInBytes=Uint16Array.BYTES_PER_ELEMENT,t.UNSIGNED_SHORT.toTypedArray=function(e){return new Uint16Array(e)},t.UNSIGNED_SHORT.createArrayBufferView=function(e,t){return new Uint16Array(e,t)},t.FLOAT=new e(5126,"FLOAT"),t.FLOAT.sizeInBytes=Float32Array.BYTES_PER_ELEMENT,t.FLOAT.toTypedArray=function(e){return new Float32Array(e)},t.FLOAT.createArrayBufferView=function(e,t){return new Float32Array(e,t)},t.validate=function(e){return e===t.BYTE||e===t.UNSIGNED_BYTE||e===t.SHORT||e===t.UNSIGNED_SHORT||e===t.FLOAT},t}),define("Core/PrimitiveType",["./Enumeration"],function(e){var t={POINTS:new e(0,"POINTS"),LINES:new e(1,"LINES"),LINE_LOOP:new e(2,"LINE_LOOP"),LINE_STRIP:new e(3,"LINE_STRIP"),TRIANGLES:new e(4,"TRIANGLES"),TRIANGLE_STRIP:new e(5,"TRIANGLE_STRIP"),TRIANGLE_FAN:new e(6,"TRIANGLE_FAN"),validate:function(e){return e===t.POINTS||e===t.LINES||e===t.LINE_LOOP||e===t.LINE_STRIP||e===t.TRIANGLES||e===t.TRIANGLE_STRIP||e===t.TRIANGLE_FAN}};return t}),define("Core/ExtentTessellator",["./defaultValue","./DeveloperError","./Math","./Ellipsoid","./Extent","./Cartesian3","./ComponentDatatype","./PrimitiveType"],function(e,t,n,r,i,s,o,u){var a={};return a.computeVertices=function(t){t=e(t,{});var n=t.extent,r=t.surfaceHeight,i=t.width,s=t.height,o=(n.east-n.west)/(i-1),u=(n.north-n.south)/(s-1),a=t.generateTextureCoordinates,f=t.interleaveTextureCoordinates,l=t.relativeToCenter,c=t.vertices,h=t.textureCoordinates,p=t.indices,d=t.radiiSquared,v=d.x,m=d.y,g=d.z,y=Math.cos,b=Math.sin,w=Math.sqrt,E=1/(n.east-n.west),S=1/(n.north-n.south),x=0,T=0;for(var N=0;N<s;++N){var C=n.north-u*N,k=y(C),L=b(C),A=g*L,O=(C-n.south)*S,M=O;for(var _=0;_<i;++_){var D=n.west+o*_,P=k*y(D),H=k*b(D),B=v*P,j=m*H,F=w(B*P+j*H+A*L),I=B/F,q=j/F,R=A/F;c[x++]=I+P*r-l.x,c[x++]=q+H*r-l.y,c[x++]=R+L*r-l.z;if(a){var U=(D-n.west)*E,z=U;f?(c[x++]=z,c[x++]=M):(h[T++]=z,h[T++]=M)}}}if(typeof p!="undefined"){var W=0,X=0;for(var V=0;V<s-1;++V){for(var $=0;$<i-1;++$){var J=W,K=J+i,Q=K+1,G=J+1;p[X++]=J,p[X++]=K,p[X++]=G,p[X++]=G,p[X++]=K,p[X++]=Q,++W}++W}}},a.compute=function(t){t=e(t,{});var n=t.extent;n.validate();var i=e(t.ellipsoid,r.WGS84);t.radiiSquared=i.getRadiiSquared(),t.relativeToCenter=e(t.relativeToCenter,s.ZERO);var f=e(t.granularity,.1);t.surfaceHeight=e(t.surfaceHeight,0),t.width=Math.ceil((n.east-n.west)/f)+1,t.height=Math.ceil((n.north-n.south)/f)+1;var l=[],c=[],h=[];t.generateTextureCoordinates=e(t.generateTextureCoordinates,!1),t.interleaveTextureCoordinates=!1,t.vertices=l,t.textureCoordinates=h,t.indices=c,a.computeVertices(t);var p={attributes:{},indexLists:[{primitiveType:u.TRIANGLES,values:c}]},d=e(t.positionName,"position");p.attributes[d]={componentDatatype:o.FLOAT,componentsPerAttribute:3,values:l};if(t.generateTextureCoordinates){var v=e(t.textureCoordinatesName,"textureCoordinates");p.attributes[v]={componentDatatype:o.FLOAT,componentsPerAttribute:2,values:h}}return p},a.computeBuffers=function(t){t=e(t,{});var n=t.extent;n.validate();var i=e(t.ellipsoid,r.WGS84);t.radiiSquared=i.getRadiiSquared(),t.relativeToCenter=e(t.relativeToCenter,s.ZERO);var o=e(t.granularity,.1);t.surfaceHeight=e(t.surfaceHeight,0),t.width=Math.ceil((n.east-n.west)/o)+1,t.height=Math.ceil((n.north-n.south)/o)+1;var u=[],f=[],l=[];t.generateTextureCoordinates=e(t.generateTextureCoordinates,!1),t.interleaveTextureCoordinates=e(t.interleaveTextureCoordinates,!1),t.vertices=u,t.textureCoordinates=l,t.indices=f,a.computeVertices(t);var c={indices:f};return t.interleaveTextureCoordinates?c.vertices=u:(c.positions=u,t.generateTextureCoordinates&&(c.textureCoordinates=l)),c},a}),define("Workers/createTaskProcessorWorker",[],function(){var e=function(e){var t,n=[],r={id:undefined,result:undefined};return function(i){var s=i.data;r.id=s.id,n.length=0,r.result=e(s.parameters,n),typeof t=="undefined"&&(t=typeof self.webkitPostMessage!="undefined"?self.webkitPostMessage:self.postMessage),t(r,n)}};return e}),define("Workers/createVerticesFromExtent",["../Core/ExtentTessellator","./createTaskProcessorWorker"],function(e,t){function n(t,n){var r=new Float32Array(t.width*t.height*5);return n.push(r.buffer),t.vertices=r,t.generateTextureCoordinates=!0,t.interleaveTextureCoordinates=!0,e.computeVertices(t),r.buffer}return t(n)});